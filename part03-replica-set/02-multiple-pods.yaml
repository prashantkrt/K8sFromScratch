# manually creating 4 pods like this:
# Then apply the ReplicaSet with replicas: 2 and the same label â€” it will adopt them and terminate the other 2.
# Once the ReplicaSet is created, it will create 2 pods with the same label as the existing pods.
# ReclicaSet will start managing the pods and will terminate the other 2.

apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod-1
  labels:
     dept: dev
     team: team-a  # this is the label we are going to use in the rs
spec:
  containers:
    - name: my-container-1
      image: nginx

---

apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod-2
  labels:
     dept: dev
     team: team-a
spec:
  containers:
    - name: my-container-2
      image: nginx

---

apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod-3
  labels:
     dept: test
     team: team-a 
spec:
  containers:
    - name: my-container-3
      image: nginx

---

apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod-4
  labels:
     dept: test
     team: team-a
spec: 
  containers:
    - name: my-container-4
      image: nginx      


# Commands
# => kubectl create -f 02-multiple-pods.yaml
# => kubectl get pods