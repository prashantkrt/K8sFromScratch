#  Step1 Create the cluster:
=> kind create cluster --config 01-cluster.yaml

#  verify cluster
=> kubectl get nodes or kubectl get node

#  verify pod if any
=> kubectl get pods or kubectl get pods 

#  Better use watch command to check the status in fixed intervals
#  Runs a command repeatedly at a fixed interval (default: 2 seconds).
#  Useful for monitoring changes in real-time.
=> watch -t kubectl get pods (where -t is we don't need title bar)

#  create pod
=> kubectl create -f 01-simple-pod.yaml

#  verify
=> kubectl get pod

#  descibe basically to get all the events details and more information related to pods
=> kubectl describe pods       

#  delete pod
=> kubectl delete -f 01-simple-pod.yaml

# Pods Status :  
# Pending  => Node is yet to be assigned 
# ContainerCreating  => Kubelet is working on creating the container 
# Running  => Kubelet started the container 
# ErrImage / ImagePullBackOff => Failed pulling the image / Kubelet will try after some delays
# Completed => Container exited successfully
# Error => Container exited with some error
# CrashLoopBackOff => There is a problem in running the container. Kubelet is retrying with delays(no issue in pulling the image)  
# Terminating => Pod is getting deleted 


#  Create the pods with dept dev which has  team development-1 and development-2
#  Create the pods with dept test which has team testing-1 and testing-2

#  create the pods
=> kubectl create -f part02-pods/03-multiple-pods.yaml

=> kubectl describe pod (will describe all the pods created)
=> kubectl describe pod nginx-pod
=> kubectl describe pod nginx-pod2
=> kubectl describe pod nginx-pod3
=> kubectl describe pod nginx-pod4

#  verify one by one
=> kubectl get pod nginx-pod

#  get all the pods labels 
=> kubectl get pods --show-labels

#  get the pods with specific labels with -l flag 
=> kubectl get pods -l dept=dev
=> kubectl get pods -l dept=test
=> kubectl get pods -l dept=dev,team=development-1
=> kubectl get pods -l dept=dev,team=development-2

#  using get , fetch the little more detail or extra info 
=> kubectl get pods -o wide
=> kubectl get pod nginx-pod -o wide
=> kubectl get pod -l dept=dev -o wide

#  formatting output to yaml
=> kubectl get pods -o yaml

#  delete the pod 
=> kubectl delete pod nginx-pod 
=> kubectl delete pod/nginx-pod # both works somewhere we can see this commnds also
=> kubectl delete pod -l dept=dev
=> kubectl delete pod --all 

#  logs 
=> kubtectl logs ubuntu-pod

#  Access the running pod
=> kubectl create -f 01-basic.yaml 
=> kubectl get pod nginx-pod
=> kubectl exec -it nginx-pod bash (depricated) we have to use -- [COMMAND]
=> kubectl exec -it nginx-pod -- bin/bash or -- bash
=> ls 
=> exit

#  Multiple Containers in pod
=> kubectl logs multi-container-pod -c ubuntu
=> kubectl logs multi-container-pod -c nginx
=> kubectl exec -it multi-container-pod -c ubuntu -- /bin/bash
=> kubectl exec -it multi-container-pod -c nginx -- /bin/bash

# => kubectl delete all --all