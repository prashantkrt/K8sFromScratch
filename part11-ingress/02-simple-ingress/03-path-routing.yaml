# ---------------------- DEPLOYMENT: service-1 (Nginx) ----------------------

apiVersion: apps/v1                     # API version for Deployment
kind: Deployment                        # Kind: Deployment manages ReplicaSets and Pods
metadata:
  name: service-1                       # Name of the deployment
spec:
  replicas: 2                           # Number of pod replicas
  selector:
    matchLabels:
      app: nginx                        # Label to match Pods managed by this Deployment
  template:
    metadata:
      labels:
        app: nginx                      # Label for the Pod; used by Service selector
    spec:
      containers:
        - name: nginx                   # Name of the container
          image: nginx                  # Docker image used
          ports:
            - containerPort: 80         # Port exposed inside the container

---

# ---------------------- SERVICE: service-1 (Nginx) ----------------------

apiVersion: v1
kind: Service
metadata:
  name: nginx-service                   # match Ingress rule
spec:
  selector:
    app: nginx                         
  ports:
    - protocol: TCP
      port: 80                          # Port exposed by the Service (for internal cluster access)
      targetPort: 80                    # Maps to containerPort in Nginx Pod

---

# ---------------------- DEPLOYMENT: service-2 (HTTP Echo) ----------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: http-echo                    # Selector label for the pods
  template:
    metadata:
      labels:
        app: http-echo
    spec:
      containers:
        - name: my-image
          image: vinsdocker/nginx-gke # will print the pod and hostname     
          ports:
            - containerPort: 80         # Port exposed inside container
---

# ---------------------- SERVICE: service-2 (HTTP Echo) ----------------------

apiVersion: v1
kind: Service
metadata:
  name: http-echo-service              # match Ingress rule
spec:
  selector:
    app: http-echo                     # Matches label in Pod
  ports:
    - protocol: TCP
      port: 80                         # Service port exposed in the cluster
      targetPort: 80                   # Maps to containerPort in HTTP Echo Pod


---

# ---------------------- INGRESS: Routing to Both Services ----------------------

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-ingress
  annotations:
   nginx.ingress.kubernetes.io/rewrite-target: /   # If we want /nginx and /echo to map to / inside the container (strip the path prefix), do this:
spec:
  rules:
     - http:
        paths:
          - path: /nginx               # Route for nginx
            pathType: Prefix
            backend:
              service:
                name: nginx-service    # Match the service name for nginx
                port:
                  number: 80           # port: 80 is the port exposed by the Kubernetes Service, 
          - path: /echo                # Route for http-echo
            pathType: Prefix
            backend:
              service:
                name: http-echo-service # match thet service name for http echo
                port:
                  number: 80

# => kubectl apply -f 03-deployment-ingress.yaml 

# => kubectl get svc nginx-service
# => kubectl get svc http-echo-service
# => kubectl get pods -l app=nginx
# => kubectl get pods -l app=http-echo

# => curl localhost/nginx/ or http://localhost/nginx
# => culr localhost/echo/ or http://localhost/echo

