apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec: 
 replicas: 2
 selector:
   matchLabels:
     app: my-app
 template:
   metadata:
     labels:
       app: my-app
   spec:
     containers:
     - name: nginx
       image: nginx


# A ReplicaSet just ensures that N identical pods are always running.
# If a pod crashes, it creates a new one.
# It doesn’t support rolling updates, rollback, or declarative updates.
# You typically don’t create ReplicaSets directly — you use Deployments for that.

# With a ReplicaSet:
# You have to manually delete and create ReplicaSets.

# With a Deployment:
# Just update the image: field → Kubernetes will:
# Create a new ReplicaSet with the updated pods
# Scale it up
# Scale the old one down
# Roll back if needed

# Simply we use Use Deployment when we want real-world features like zero-downtime updates, rollback, and version control.


# Command to create the deployment:
# kubectl apply -f 01-simple-deployment.yaml