apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  labels:
    app: probe-learning
spec:
  containers:
    - name: mongo
      image: mongo
      startupProbe:
        tcpSocket:
          port: 27017
          # host: localhost      
        initialDelaySeconds: 0      # Start probing immediately
        periodSeconds: 10           # Wait 10 seconds between probes
        timeoutSeconds: 1           # Wait 1 second max for each probe
        successThreshold: 1         # One success is enough to consider container "started"
        failureThreshold: 3         # Fail after 3 unsuccessful probes

# startupProbe:
#   tcpSocket:
#     port: 27017
#   initialDelaySeconds: 10     # Give Mongo some time to boot
#   periodSeconds: 5
#   timeoutSeconds: 1
#   successThreshold: 1
#   failureThreshold: 5         # Allow more retries before restart    

# commands to run
# kubectl apply -f 02-startup-tcpsocket.yaml
# command to check the pod status     

# Probe Attempt	Time	Result
# 1st Probe	0s	‚úÖ Success
# Startup Successful	~0s	Container is marked as started

# ‚ùå Worst Case: MongoDB is Slow or Fails to Start
# If MongoDB is not yet ready, or port 27017 isn‚Äôt accepting connections, probes will fail:

# Probe	Time	Result
# #1	0s	‚ùå Failed
# #2	10s	‚ùå Failed
# #3	20s	‚ùå Failed
# üîÅ Restart	After 3rd failure	Starts immediately after the 3rd probe fails
# ‚û°Ô∏è So, in the worst-case, Kubernetes waits 3 √ó 10s = 30 seconds total (including retries) before restarting the container.